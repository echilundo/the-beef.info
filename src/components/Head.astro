---
import "../styles/global.css";
import "@fontsource/inter/latin-400.css";
import "@fontsource/inter/latin-600.css";
import "@fontsource/lora/400.css";
import "@fontsource/lora/600.css";
import inter400 from "@fontsource/inter/files/inter-latin-400-normal.woff2";
import inter600 from "@fontsource/inter/files/inter-latin-600-normal.woff2";
import lora400 from "@fontsource/lora/files/lora-latin-400-normal.woff2";
import lora600 from "@fontsource/lora/files/lora-latin-600-normal.woff2";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/nano.png" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon-dark.svg" media="(prefers-color-scheme: dark)">
<link rel="icon" type="image/svg+xml" href="/favicon-light.svg" media="(prefers-color-scheme: light)">
<link rel="icon" type="image/x-icon" href="/favicon-light.svg">
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link 
  rel="preload" 
  href="/fonts/inter-latin-400-normal.woff2"
  as="font" 
  type="font/woff2" 
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Critical CSS -->
<style is:inline>
  :root {
    color-scheme: light;
  }
  :root.dark {
    color-scheme: dark;
  }
  body {
    font-family: Inter, system-ui, -apple-system, sans-serif;
    opacity: 0;
  }
  .fonts-loaded body {
    opacity: 1;
    transition: opacity .1s;
  }
</style>

<ViewTransitions />

<!-- Critical JS -->
<script is:inline>
  // Minimal theme initialization
  (function() {
    const theme = localStorage.theme === 'dark' || (!localStorage.theme && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
    document.documentElement.classList[theme === 'dark' ? 'add' : 'remove']('dark');
  })();

  // Minimal font loading
  (function() {
    if ("fonts" in document) {
      document.fonts.load("1em Inter").then(() => {
        document.documentElement.classList.add("fonts-loaded");
      });
    } else {
      document.documentElement.classList.add("fonts-loaded");
    }
  })();
</script>

<!-- Deferred JS -->
<script>
  // Theme handling
  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
  mediaQuery.addEventListener('change', e => {
    if (!localStorage.theme) {
      document.documentElement.classList.toggle('dark', e.matches);
    }
  });

  // Scroll handling - using passive listeners
  let scrollTimeout;
  document.addEventListener('scroll', () => {
    clearTimeout(scrollTimeout);
    scrollTimeout = setTimeout(() => {
      document.documentElement.classList.toggle('scrolled', window.scrollY > 0);
    }, 100);
  }, { passive: true });
</script>